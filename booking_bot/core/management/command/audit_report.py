from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
from booking_bot.core.models import AuditLog
from django.db.models import Count


class Command(BaseCommand):
    help = "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –∞—É–¥–∏—Ç—É –¥–æ—Å—Ç—É–ø–∞"

    def add_arguments(self, parser):
        parser.add_argument(
            "--days", type=int, default=30, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –æ—Ç—á–µ—Ç–∞"
        )
        parser.add_argument("--user", type=str, help="–§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

    def handle(self, *args, **options):
        days = options["days"]
        username = options.get("user")

        # –§–∏–ª—å—Ç—Ä—É–µ–º –ª–æ–≥–∏
        start_date = timezone.now() - timedelta(days=days)
        logs = AuditLog.objects.filter(timestamp__gte=start_date)

        if username:
            logs = logs.filter(user__username=username)

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º
        action_stats = (
            logs.values("action").annotate(count=Count("id")).order_by("-count")
        )

        self.stdout.write(self.style.SUCCESS(f"\nüìä –û—Ç—á–µ—Ç –ø–æ –∞—É–¥–∏—Ç—É –∑–∞ {days} –¥–Ω–µ–π\n"))
        self.stdout.write(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {logs.count()}\n")

        self.stdout.write("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º:")
        for stat in action_stats:
            self.stdout.write(f"  {stat['action']}: {stat['count']}")

        # –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        user_stats = (
            logs.values("user__username")
            .annotate(count=Count("id"))
            .order_by("-count")[:10]
        )

        self.stdout.write("\nüë• –¢–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        for stat in user_stats:
            self.stdout.write(f"  {stat['user__username']}: {stat['count']} –¥–µ–π—Å—Ç–≤–∏–π")

        # –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        suspicious = (
            logs.filter(action__in=["view_code", "send_code", "export_data"])
            .values("user__username")
            .annotate(count=Count("id"))
            .filter(count__gt=50)
            .order_by("-count")
        )

        if suspicious:
            self.stdout.write(self.style.WARNING("\n‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:"))
            for stat in suspicious:
                self.stdout.write(
                    f"  {stat['user__username']}: {stat['count']} –¥–æ—Å—Ç—É–ø–æ–≤ –∫ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º"
                )
