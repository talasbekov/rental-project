# Generated by Django 5.2.3 on 2025-09-11 19:18

import booking_bot.core.storage
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("bookings", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name_plural": "Cities",
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="districts",
                        to="listings.city",
                    ),
                ),
            ],
            options={
                "unique_together": {("name", "city")},
            },
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("description", models.TextField(verbose_name="Описание")),
                ("address", models.CharField(max_length=255, verbose_name="Адрес")),
                ("number_of_rooms", models.PositiveIntegerField(verbose_name="Количество комнат")),
                (
                    "area",
                    models.DecimalField(
                        decimal_places=2, help_text="Площадь в квадратных метрах", max_digits=8
                    ),
                ),
                (
                    "property_class",
                    models.CharField(
                        choices=[
                            ("comfort", "Комфорт"),
                            ("business", "Бизнес"),
                            ("premium", "Премиум"),
                        ],
                        default="comfort",
                        max_length=20,
                        verbose_name="Класс жилья",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Свободна", "Свободна"),
                            ("Забронирована", "Забронирована"),
                            ("Занята", "Занята"),
                            ("На обслуживании", "На обслуживании"),
                        ],
                        default="Свободна",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                ("entry_floor", models.IntegerField(blank=True, null=True, verbose_name="Этаж")),
                (
                    "entry_instructions",
                    models.TextField(blank=True, null=True, verbose_name="Инструкции по заселению"),
                ),
                (
                    "price_per_day",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена за сутки"
                    ),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Средняя оценка по всем отзывам",
                        max_digits=3,
                        verbose_name="Средний рейтинг",
                    ),
                ),
                (
                    "reviews_count",
                    models.PositiveIntegerField(default=0, verbose_name="Количество отзывов"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "_encrypted_key_safe_code",
                    models.TextField(blank=True, db_column="encrypted_key_safe_code", default=""),
                ),
                (
                    "_encrypted_digital_lock_code",
                    models.TextField(
                        blank=True, db_column="encrypted_digital_lock_code", default=""
                    ),
                ),
                (
                    "_encrypted_entry_code",
                    models.TextField(blank=True, db_column="encrypted_entry_code", default=""),
                ),
                (
                    "_encrypted_owner_phone",
                    models.TextField(blank=True, db_column="encrypted_owner_phone", default=""),
                ),
                (
                    "district",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="properties",
                        to="listings.district",
                        verbose_name="Район",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        limit_choices_to={"is_staff": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="properties",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Квартира",
                "verbose_name_plural": "Квартиры",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        verbose_name="Оценка",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True, help_text="Текст отзыва", verbose_name="Комментарий"
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=True, verbose_name="Одобрен администратором"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        help_text="Связанное бронирование",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="review",
                        to="bookings.booking",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="listings.property",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв",
                "verbose_name_plural": "Отзывы",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReviewPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("image_url", models.URLField()),
                ("caption", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="listings.review",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GuestReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                ("text", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guest_review",
                        to="bookings.booking",
                    ),
                ),
                (
                    "guest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guest_reviews_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guest_reviews_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("booking", "reviewer")},
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="listings.property",
                    ),
                ),
            ],
            options={
                "verbose_name": "Избранное",
                "verbose_name_plural": "Избранное",
                "unique_together": {("user", "property")},
            },
        ),
        migrations.CreateModel(
            name="CalendarDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("free", "Свободно"),
                            ("booked", "Забронировано"),
                            ("occupied", "Занято"),
                            ("blocked", "Заблокировано владельцем"),
                            ("cleaning", "Уборка"),
                            ("maintenance", "Обслуживание"),
                        ],
                        default="free",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Заметки (причина блокировки, тип уборки и т.д.)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calendar_days",
                        to="bookings.booking",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_days",
                        to="listings.property",
                    ),
                ),
            ],
            options={
                "ordering": ["date"],
                "indexes": [
                    models.Index(
                        fields=["property", "date", "status"], name="listings_ca_propert_6aa4fb_idx"
                    ),
                    models.Index(fields=["date", "status"], name="listings_ca_date_1106c5_idx"),
                ],
                "unique_together": {("property", "date")},
            },
        ),
        migrations.CreateModel(
            name="PropertyPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Максимум 5 МБ, форматы: JPEG, PNG, WEBP",
                        max_length=500,
                        null=True,
                        storage=booking_bot.core.storage.S3PhotoStorage,
                        upload_to="property_photos/",
                    ),
                ),
                ("image_url", models.URLField(blank=True, max_length=500, null=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_main", models.BooleanField(default=False)),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                ("file_size", models.PositiveIntegerField(blank=True, null=True)),
                ("cdn_url", models.URLField(blank=True, max_length=500)),
                ("thumbnail_url", models.URLField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="listings.property",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
                "indexes": [
                    models.Index(
                        fields=["property", "order"], name="listings_pr_propert_1e7e2f_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PropertyTarget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("month", models.DateField(help_text="Первое число месяца")),
                (
                    "target_revenue",
                    models.DecimalField(
                        decimal_places=2, help_text="Целевая выручка", max_digits=10
                    ),
                ),
                ("target_occupancy", models.FloatField(help_text="Целевая загрузка в процентах")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="targets",
                        to="listings.property",
                    ),
                ),
            ],
            options={
                "ordering": ["-month"],
                "unique_together": {("property", "month")},
            },
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(
                fields=["property", "is_approved"], name="listings_re_propert_6a8ddd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["user", "property"], name="listings_re_user_id_7b219e_idx"),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["created_at"], name="listings_re_created_4808d6_idx"),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["rating"], name="listings_re_rating_d53460_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="review",
            unique_together={("user", "booking")},
        ),
    ]
