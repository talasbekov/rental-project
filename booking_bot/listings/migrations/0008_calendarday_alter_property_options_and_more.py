# Generated by Django 5.2.3 on 2025-08-07 18:16

import booking_bot.core.storage
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bookings", "0003_alter_booking_options_booking_cancel_reason_and_more"),
        ("listings", "0007_fix_property_class_add_missing_fields"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CalendarDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("free", "Свободно"),
                            ("booked", "Забронировано"),
                            ("occupied", "Занято"),
                            ("blocked", "Заблокировано владельцем"),
                            ("cleaning", "Уборка"),
                            ("maintenance", "Обслуживание"),
                        ],
                        default="free",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Заметки (причина блокировки, тип уборки и т.д.)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["date"],
            },
        ),
        migrations.AlterModelOptions(
            name="property",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Квартира",
                "verbose_name_plural": "Квартиры",
            },
        ),
        migrations.AlterModelOptions(
            name="propertyphoto",
            options={"ordering": ["order", "id"]},
        ),
        migrations.RemoveField(
            model_name="property",
            name="digital_lock_code",
        ),
        migrations.RemoveField(
            model_name="property",
            name="entry_code",
        ),
        migrations.RemoveField(
            model_name="property",
            name="key_safe_code",
        ),
        migrations.RemoveField(
            model_name="property",
            name="owner_phone",
        ),
        migrations.AddField(
            model_name="property",
            name="_encrypted_digital_lock_code",
            field=models.TextField(
                blank=True, db_column="encrypted_digital_lock_code", default=""
            ),
        ),
        migrations.AddField(
            model_name="property",
            name="_encrypted_key_safe_code",
            field=models.TextField(
                blank=True, db_column="encrypted_key_safe_code", default=""
            ),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="cdn_url",
            field=models.URLField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="file_size",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="height",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="is_main",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="order",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="thumbnail_url",
            field=models.URLField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="propertyphoto",
            name="width",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="property",
            name="address",
            field=models.CharField(max_length=255, verbose_name="Адрес"),
        ),
        migrations.AlterField(
            model_name="property",
            name="area",
            field=models.DecimalField(
                decimal_places=2, help_text="Площадь в квадратных метрах", max_digits=8
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="description",
            field=models.TextField(verbose_name="Описание"),
        ),
        migrations.AlterField(
            model_name="property",
            name="district",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="properties",
                to="listings.district",
                verbose_name="Район",
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="entry_floor",
            field=models.IntegerField(blank=True, null=True, verbose_name="Этаж"),
        ),
        migrations.AlterField(
            model_name="property",
            name="entry_instructions",
            field=models.TextField(
                blank=True, null=True, verbose_name="Инструкции по заселению"
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="name",
            field=models.CharField(max_length=255, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="property",
            name="number_of_rooms",
            field=models.PositiveIntegerField(verbose_name="Количество комнат"),
        ),
        migrations.AlterField(
            model_name="property",
            name="owner",
            field=models.ForeignKey(
                limit_choices_to={"is_staff": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="properties",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Владелец",
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="price_per_day",
            field=models.DecimalField(
                decimal_places=2, max_digits=10, verbose_name="Цена за сутки"
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="property_class",
            field=models.CharField(
                choices=[
                    ("comfort", "Комфорт"),
                    ("business", "Бизнес"),
                    ("premium", "Премиум"),
                ],
                default="comfort",
                max_length=20,
                verbose_name="Класс жилья",
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="status",
            field=models.CharField(
                choices=[
                    ("Свободна", "Свободна"),
                    ("Забронирована", "Забронирована"),
                    ("Занята", "Занята"),
                    ("На обслуживании", "На обслуживании"),
                ],
                default="Свободна",
                max_length=20,
                verbose_name="Статус",
            ),
        ),
        migrations.AlterField(
            model_name="propertyphoto",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Максимум 5 МБ, форматы: JPEG, PNG, WEBP",
                max_length=500,
                null=True,
                storage=booking_bot.core.storage.S3PhotoStorage,
                upload_to="property_photos/",
            ),
        ),
        migrations.AlterField(
            model_name="propertyphoto",
            name="image_url",
            field=models.URLField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name="propertyphoto",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="photos",
                to="listings.property",
            ),
        ),
        migrations.AddIndex(
            model_name="propertyphoto",
            index=models.Index(
                fields=["property", "order"], name="listings_pr_propert_1e7e2f_idx"
            ),
        ),
        migrations.AddField(
            model_name="calendarday",
            name="booking",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="calendar_days",
                to="bookings.booking",
            ),
        ),
        migrations.AddField(
            model_name="calendarday",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="calendar_days",
                to="listings.property",
            ),
        ),
        migrations.AddIndex(
            model_name="calendarday",
            index=models.Index(
                fields=["property", "date", "status"],
                name="listings_ca_propert_6aa4fb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="calendarday",
            index=models.Index(
                fields=["date", "status"], name="listings_ca_date_1106c5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="calendarday",
            unique_together={("property", "date")},
        ),
    ]
