"""–û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–ª—è –±–æ—Ç-–ø–ª–∞—Ç—Ñ–æ—Ä–º."""

import html
import logging
from typing import Optional

from django.contrib.auth import get_user_model

from booking_bot.core.models import AuditLog

logger = logging.getLogger(__name__)

User = get_user_model()


def build_confirmation_message(booking, include_owner_contact: bool = True) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."""
    property_obj = booking.property
    parts = [
        "<b>‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>\n\n",
        "üéâ –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!\n\n",
        "<b>–î–µ—Ç–∞–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:</b>\n",
        f"–ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏: #{booking.id}\n",
        f"–ö–≤–∞—Ä—Ç–∏—Ä–∞: {html.escape(property_obj.name)}\n",
        f"–ê–¥—Ä–µ—Å: {html.escape(property_obj.address or '')}\n",
        f"–ó–∞–µ–∑–¥: {booking.start_date.strftime('%d.%m.%Y')}\n",
        f"–í—ã–µ–∑–¥: {booking.end_date.strftime('%d.%m.%Y')}\n",
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {booking.total_price:,.0f} ‚Ç∏\n",
    ]

    if property_obj.entry_instructions:
        parts.append(
            "\nüìù <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞—Å–µ–ª–µ–Ω–∏—é:</b>\n"
            f"{html.escape(property_obj.entry_instructions)}\n"
        )

    if include_owner_contact:
        owner_phone = getattr(getattr(property_obj.owner, "profile", None), "phone_number", "")
        if owner_phone:
            parts.append(f"\nüìû <b>–ö–æ–Ω—Ç–∞–∫—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞:</b> {html.escape(owner_phone)}\n")

    parts.append("\nüí¨ –ñ–µ–ª–∞–µ–º –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞!")
    return "".join(parts)

def log_codes_delivery(booking, channel: str, recipient: Optional[str]) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∫–æ–¥–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ –ø–∏—à–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ AuditLog."""
    property_obj = booking.property
    user: User = booking.user
    codes = property_obj.get_access_codes(user)

    AuditLog.log(
        user=user,
        action="send_code",
        obj=property_obj,
        details={
            "booking_id": booking.id,
            "channel": channel,
            "codes_sent": list(codes.keys()),
        },
        telegram_chat_id=recipient if channel == "telegram" else "",
        whatsapp_phone=recipient if channel == "whatsapp" else "",
    )

    parts = []
    if codes.get("digital_lock_code"):
        parts.append(
            f"üîê <b>–ö–æ–¥ –æ—Ç –∑–∞–º–∫–∞:</b> <code>{html.escape(codes['digital_lock_code'])}</code>"
        )
    if codes.get("key_safe_code"):
        parts.append(
            f"üîë <b>–ö–æ–¥ –æ—Ç —Å–µ–π—Ñ–∞:</b> <code>{html.escape(codes['key_safe_code'])}</code>"
        )
    if codes.get("entry_code"):
        parts.append(
            f"üö™ <b>–ö–æ–¥ –¥–æ–º–æ—Ñ–æ–Ω–∞:</b> <code>{html.escape(codes['entry_code'])}</code>"
        )
    if codes.get("owner_phone") and not getattr(
        getattr(property_obj.owner, "profile", None), "phone_number", None
    ):
        parts.append(
            f"üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞:</b> {html.escape(codes['owner_phone'])}"
        )

    return "\n".join(parts)
