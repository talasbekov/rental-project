# Generated by Django 5.2.3 on 2025-08-07 18:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationQueue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("telegram_chat_id", models.CharField(blank=True, max_length=255)),
                ("event", models.CharField(max_length=50)),
                ("channel", models.CharField(max_length=20)),
                ("message", models.TextField()),
                ("context", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "В очереди"),
                            ("processing", "Обрабатывается"),
                            ("sent", "Отправлено"),
                            ("failed", "Ошибка"),
                            ("cancelled", "Отменено"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("scheduled_for", models.DateTimeField()),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("attempts", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["scheduled_for"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(max_length=20)),
                ("message", models.TextField(blank=True)),
                ("response", models.JSONField(blank=True, default=dict)),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.notificationqueue",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.CharField(
                        choices=[
                            ("booking_created", "Новое бронирование"),
                            ("booking_confirmed", "Бронирование подтверждено"),
                            ("booking_cancelled", "Бронирование отменено"),
                            ("payment_success", "Успешная оплата"),
                            ("payment_failed", "Ошибка оплаты"),
                            ("checkin_reminder", "Напоминание о заезде"),
                            ("checkout_reminder", "Напоминание о выезде"),
                            ("review_request", "Запрос отзыва"),
                            ("property_added", "Квартира добавлена"),
                            ("low_occupancy", "Низкая загрузка"),
                            ("cleaning_needed", "Требуется уборка"),
                            ("maintenance_alert", "Требуется обслуживание"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("telegram", "Telegram"),
                            ("whatsapp", "WhatsApp"),
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push уведомление"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "template_ru",
                    models.TextField(
                        help_text="Используйте {переменные} для подстановки"
                    ),
                ),
                (
                    "template_kz",
                    models.TextField(blank=True, help_text="Казахский вариант"),
                ),
                (
                    "template_en",
                    models.TextField(blank=True, help_text="Английский вариант"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "delay_minutes",
                    models.IntegerField(
                        default=0, help_text="Задержка перед отправкой (минуты)"
                    ),
                ),
                (
                    "send_to_user",
                    models.BooleanField(
                        default=True, help_text="Отправлять пользователю"
                    ),
                ),
                (
                    "send_to_owner",
                    models.BooleanField(
                        default=False, help_text="Отправлять владельцу"
                    ),
                ),
                (
                    "send_to_admins",
                    models.BooleanField(default=False, help_text="Отправлять админам"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "unique_together": {("event", "channel")},
            },
        ),
        migrations.AddIndex(
            model_name="notificationqueue",
            index=models.Index(
                fields=["status", "scheduled_for"], name="notificatio_status_103f8a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationqueue",
            index=models.Index(
                fields=["user", "created_at"], name="notificatio_user_id_421275_idx"
            ),
        ),
    ]
