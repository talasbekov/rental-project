import logging
import os
import tempfile

from telegram import ReplyKeyboardMarkup, KeyboardButton

from .admin_handlers import handle_edit_property_start
from .utils import send_telegram_message, send_photo_group
from .constants import (
    STATE_PHOTO_MANAGEMENT, _get_profile, STATE_PHOTO_ADD_URL, STATE_PHOTO_DELETE, STATE_ADMIN_ADD_PHOTOS, log_handler,
)
from booking_bot.listings.models import Property, PropertyPhoto

logger = logging.getLogger(__name__)

# --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î ---

def save_new_price(chat_id, text):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–µ–Ω—ã"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    if text == "‚ùå –û—Ç–º–µ–Ω–∞":
        handle_edit_property_start(chat_id, property_id)
        return

    try:
        price = float(text.replace(',', '.'))
        if price <= 0:
            raise ValueError("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π")

        prop = Property.objects.get(id=property_id)
        old_price = prop.price_per_day
        prop.price_per_day = price
        prop.save()

        send_telegram_message(
            chat_id,
            f"‚úÖ –¶–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!\n"
            f"–ë—ã–ª–æ: {old_price} ‚Ç∏\n"
            f"–°—Ç–∞–ª–æ: {price} ‚Ç∏"
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        handle_edit_property_start(chat_id, property_id)

    except ValueError:
        send_telegram_message(chat_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        profile.telegram_state = {}
        profile.save()


def save_new_description(chat_id, text):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    if text == "‚ùå –û—Ç–º–µ–Ω–∞":
        handle_edit_property_start(chat_id, property_id)
        return

    try:
        prop = Property.objects.get(id=property_id)
        prop.description = text.strip()
        prop.save()

        send_telegram_message(chat_id, "‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        handle_edit_property_start(chat_id, property_id)

    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        profile.telegram_state = {}
        profile.save()


def save_new_status(chat_id, text):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    if text == "‚ùå –û—Ç–º–µ–Ω–∞":
        handle_edit_property_start(chat_id, property_id)
        return

    if text not in ["–°–≤–æ–±–æ–¥–Ω–∞", "–ù–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏"]:
        send_telegram_message(chat_id, "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return

    try:
        prop = Property.objects.get(id=property_id)
        old_status = prop.status
        prop.status = text
        prop.save()

        send_telegram_message(
            chat_id,
            f"‚úÖ –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!\n"
            f"–ë—ã–ª–æ: {old_status}\n"
            f"–°—Ç–∞–ª–æ: {text}"
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        handle_edit_property_start(chat_id, property_id)

    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        profile.telegram_state = {}
        profile.save()


@log_handler
def save_new_photo(chat_id, text):
    """–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    logger.info(f"save_new_photo called with text: '{text}', property_id: {property_id}")

    if not property_id:
        send_telegram_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ —Å–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä
        from .admin_handlers import show_admin_properties
        profile.telegram_state = {}
        profile.save()
        show_admin_properties(chat_id)
        return

    try:
        prop = Property.objects.get(id=property_id)
        photos = PropertyPhoto.objects.filter(property=prop)

        if text == "‚ùå –û—Ç–º–µ–Ω–∞":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã
            from .admin_handlers import handle_edit_property_start
            handle_edit_property_start(chat_id, property_id)
            return

        elif text == "üì∑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ":
            show_property_photos_enhanced(chat_id, prop, photos)
            # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ –º–µ–Ω—é - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –∑–∞–Ω–æ–≤–æ
            handle_manage_photos_start(chat_id)
            return

        elif text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ":
            start_add_photo(chat_id, property_id)
            return

        elif text == "üóë –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ":
            start_delete_photo(chat_id, prop, photos)
            return

        elif text == "üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é":
            from .admin_handlers import handle_edit_property_start
            handle_edit_property_start(chat_id, property_id)
            return

        else:
            send_telegram_message(
                chat_id,
                f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: '{text}'\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:"
            )
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∑–∞–Ω–æ–≤–æ
            handle_manage_photos_start(chat_id)

    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        profile.telegram_state = {}
        profile.save()
        from .admin_handlers import show_admin_properties
        show_admin_properties(chat_id)


@log_handler
def handle_manage_photos_start(chat_id):
    """–ù–∞—á–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    if not property_id:
        send_telegram_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    try:
        prop = Property.objects.get(id=property_id)
        photos = PropertyPhoto.objects.filter(property=prop)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        state_data['state'] = STATE_PHOTO_MANAGEMENT
        profile.telegram_state = state_data
        profile.save()

        text = (
            f"üì∑ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏*\n\n"
            f"üè† {prop.name}\n"
            f"üì∏ –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ: {photos.count()}/6\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )

        keyboard = [
            [KeyboardButton("üì∑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ")],
            [KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")],
        ]

        if photos.exists():
            keyboard.append([KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ")])

        keyboard.extend([
            [KeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é")],
            [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]
        ])

        send_telegram_message(
            chat_id,
            text,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True).to_dict()
        )

    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


def show_property_photos_enhanced(chat_id, prop, photos):
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∫–∞–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
    if not photos.exists():
        send_telegram_message(
            chat_id,
            f"üì∑ *–£ –∫–≤–∞—Ä—Ç–∏—Ä—ã ¬´{prop.name}¬ª –ø–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π*\n\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ 6 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —á–µ—Ä–µ–∑ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
        )
        return

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–æ—Ç–æ
    url_photos = photos.filter(image_url__isnull=False).count()
    file_photos = photos.filter(image__isnull=False).count()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    photo_urls = []
    failed_count = 0

    for photo in photos:
        url = None
        if photo.image_url:
            url = photo.image_url
        elif photo.image:
            try:
                if hasattr(photo.image, 'url'):
                    url = photo.image.url
                    if url and not url.startswith('http'):
                        from django.conf import settings
                        site_url = getattr(settings, 'SITE_URL', '')
                        domain = getattr(settings, 'DOMAIN', 'http://localhost:8000')
                        base_url = site_url or domain
                        url = f"{base_url.rstrip('/')}{url}"
            except Exception as e:
                logger.error(f"Error getting image URL: {e}")
                failed_count += 1

        if url:
            photo_urls.append(url)
        else:
            failed_count += 1

    if photo_urls:
        try:
            send_photo_group(chat_id, photo_urls)

            stats_text = (
                f"üì∑ *–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã ¬´{prop.name}¬ª*\n\n"
                f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
                f"‚Ä¢ –ü–æ–∫–∞–∑–∞–Ω–æ: {len(photo_urls)} —Ñ–æ—Ç–æ\n"
                f"‚Ä¢ –í—Å–µ–≥–æ –≤ –±–∞–∑–µ: {photos.count()}\n"
                f"‚Ä¢ –ü–æ URL: {url_photos}\n"
                f"‚Ä¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {file_photos}"
            )

            if failed_count > 0:
                stats_text += f"\n‚Ä¢ ‚ùå –û—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏: {failed_count}"

            send_telegram_message(chat_id, stats_text)

        except Exception as e:
            logger.error(f"Error sending photos: {e}")
            send_telegram_message(
                chat_id,
                f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π*\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {len(photo_urls)} —Ñ–æ—Ç–æ.\n"
                f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}\n\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–∑–∂–µ."
            )
    else:
        send_telegram_message(
            chat_id,
            f"‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏*\n\n"
            f"–í –±–∞–∑–µ –µ—Å—Ç—å {photos.count()} –∑–∞–ø–∏—Å–µ–π –æ —Ñ–æ—Ç–æ, –Ω–æ –Ω–∏ –æ–¥–Ω—É –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å.\n"
            f"–í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª—ã –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã –∏–ª–∏ URL –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."
        )


def start_add_photo(chat_id, property_id):
    """–ù–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
    profile = _get_profile(chat_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    photos_count = PropertyPhoto.objects.filter(property_id=property_id).count()
    if photos_count >= 6:
        send_telegram_message(
            chat_id,
            "‚ùå *–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!*\n\n"
            "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞–∫—Å–∏–º—É–º 6 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n"
            "–°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ —Ñ–æ—Ç–æ."
        )
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state_data = profile.telegram_state or {}
    state_data['state'] = STATE_PHOTO_ADD_URL
    profile.telegram_state = state_data
    profile.save()

    remaining = 6 - photos_count
    text = (
        f"üì∑ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏*\n\n"
        f"–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ: {remaining} —Ñ–æ—Ç–æ\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:"
    )

    keyboard = [
        [KeyboardButton("üîó –î–æ–±–∞–≤–∏—Ç—å –ø–æ URL")],
        [KeyboardButton("üì± –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")],
        [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]
    ]

    send_telegram_message(
        chat_id,
        text,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True).to_dict()
    )


def handle_photo_add_choice(chat_id, text):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}

    if text == "‚ùå –û—Ç–º–µ–Ω–∞":
        handle_manage_photos_start(chat_id)
        return

    elif text == "üîó –î–æ–±–∞–≤–∏—Ç—å –ø–æ URL":
        state_data['state'] = 'photo_waiting_url'
        state_data['photo_mode'] = 'url'
        profile.telegram_state = state_data
        profile.save()

        keyboard = [[KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]]
        send_telegram_message(
            chat_id,
            "üîó *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø–æ URL*\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ URL —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª):\n\n"
            "–ü—Ä–∏–º–µ—Ä: https://example.com/photo1.jpg",
            reply_markup=ReplyKeyboardMarkup(
                keyboard,
                resize_keyboard=True,
                input_field_placeholder="https://example.com/photo.jpg"
            ).to_dict()
        )

    elif text == "üì± –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞":
        state_data['state'] = 'photo_waiting_upload'
        state_data['photo_mode'] = 'upload'
        profile.telegram_state = state_data
        profile.save()

        keyboard = [[KeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å")], [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]]
        send_telegram_message(
            chat_id,
            "üì± *–ó–∞–≥—Ä—É–∑–∫–∞ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞*\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n"
            "–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–æ—Ç–æ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å'",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True).to_dict()
        )


def handle_photo_url_input(chat_id, text):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    if text == "‚ùå –û—Ç–º–µ–Ω–∞":
        handle_manage_photos_start(chat_id)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
    current_count = PropertyPhoto.objects.filter(property_id=property_id).count()
    if current_count >= 6:
        send_telegram_message(
            chat_id,
            "‚ùå –î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (6 —à—Ç—É–∫)"
        )
        return

    # –ü–∞—Ä—Å–∏–º URL'—ã
    urls = [u.strip() for u in text.split() if u.strip().startswith('http')]

    if not urls:
        send_telegram_message(
            chat_id,
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö URL.\n"
            "URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://"
        )
        return

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    available_slots = 6 - current_count
    if len(urls) > available_slots:
        send_telegram_message(
            chat_id,
            f"‚ö†Ô∏è –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ {available_slots} —Ñ–æ—Ç–æ.\n"
            f"–ë—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–µ—Ä–≤—ã–µ {available_slots} URL."
        )
        urls = urls[:available_slots]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
    created = 0
    errors = []

    for url in urls:
        try:
            # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è URL
            if not (url.endswith('.jpg') or url.endswith('.jpeg') or
                    url.endswith('.png') or url.endswith('.webp')):
                errors.append(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: {url[:50]}...")
                continue

            PropertyPhoto.objects.create(property_id=property_id, image_url=url)
            created += 1

        except Exception as e:
            logger.error(f"Error saving photo URL {url}: {e}")
            errors.append(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {url[:50]}...")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result_text = f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {created} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"

    if errors:
        result_text += f"\n\n‚ùå –û—à–∏–±–∫–∏ ({len(errors)}):\n"
        result_text += "\n".join(errors[:3])  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –æ—à–∏–±–∫–∏
        if len(errors) > 3:
            result_text += f"\n...–∏ –µ—â–µ {len(errors) - 3}"

    total_photos = PropertyPhoto.objects.filter(property_id=property_id).count()
    result_text += f"\n\nüì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ: {total_photos}/6"

    send_telegram_message(chat_id, result_text)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
    handle_manage_photos_start(chat_id)


def edit_handle_photo_upload(chat_id, update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    state = state_data.get('state')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if state != 'photo_waiting_upload':
        return False

    property_id = state_data.get('editing_property_id')
    if not property_id:
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    current_photos = PropertyPhoto.objects.filter(property_id=property_id).count()
    if current_photos >= 6:
        send_telegram_message(
            chat_id,
            "‚ùå *–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º!*\n\n"
            "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞–∫—Å–∏–º—É–º 6 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π."
        )
        return True

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    if update.message and update.message.photo:
        photos = update.message.photo

        try:
            # –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
            best_photo = max(photos, key=lambda p: getattr(p, 'file_size', 0) or 0)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if hasattr(best_photo, 'file_size') and best_photo.file_size > 5 * 1024 * 1024:
                send_telegram_message(
                    chat_id,
                    "‚ùå *–§–æ—Ç–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ!*\n\n"
                    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 5 –ú–ë."
                )
                return True

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Telegram API
            bot = context.bot
            file = bot.get_file(best_photo.file_id)

            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            import tempfile
            import os
            tmp = tempfile.NamedTemporaryFile(delete=False, suffix='.jpg')
            file.download(custom_path=tmp.name)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Django
            with open(tmp.name, 'rb') as f:
                from django.core.files import File
                django_file = File(f, name=f"property_{property_id}_{best_photo.file_id}.jpg")
                PropertyPhoto.objects.create(property_id=property_id, image=django_file)

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.unlink(tmp.name)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            total_photos = PropertyPhoto.objects.filter(property_id=property_id).count()
            remaining = 6 - total_photos

            if total_photos >= 6:
                send_telegram_message(
                    chat_id,
                    f"‚úÖ *–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!*\n\n"
                    f"üì∏ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: 6/6 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n"
                    f"–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º. –ù–∞–∂–º–∏—Ç–µ '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å'"
                )
            else:
                send_telegram_message(
                    chat_id,
                    f"‚úÖ *–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!*\n\n"
                    f"üì∏ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {total_photos}/6\n"
                    f"–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ: {remaining}\n\n"
                    f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å'"
                )

            return True

        except Exception as e:
            logger.error(f"Error uploading photo: {e}", exc_info=True)
            send_telegram_message(
                chat_id,
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
            return True

    return False


@log_handler
def handle_photo_management_states(chat_id, text, update, context):
    """–ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    state = state_data.get('state')

    # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info(f"Photo management state: '{state}', text: '{text}'")

    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
    if state == STATE_PHOTO_MANAGEMENT:
        save_new_photo(chat_id, text)
        return True

    # –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
    elif state == STATE_PHOTO_ADD_URL:
        handle_photo_add_choice(chat_id, text)
        return True

    # –í–≤–æ–¥ URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    elif state == 'photo_waiting_url':
        handle_photo_url_input(chat_id, text)
        return True

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    elif state == 'photo_waiting_upload':
        if text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å":
            property_id = state_data.get("editing_property_id")
            if property_id:
                total_photos = PropertyPhoto.objects.filter(property_id=property_id).count()
                send_telegram_message(
                    chat_id,
                    f"‚úÖ *–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!*\n\n"
                    f"üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ: {total_photos}/6"
                )
            handle_manage_photos_start(chat_id)
        elif text == "‚ùå –û—Ç–º–µ–Ω–∞":
            handle_manage_photos_start(chat_id)
        # –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –≤ edit_handle_photo_upload
        return True

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    elif state == STATE_PHOTO_DELETE:
        handle_photo_delete(chat_id, text)
        return True

    return False


def start_delete_photo(chat_id, prop, photos):
    """–ù–∞—á–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    if not photos.exists():
        send_telegram_message(chat_id, "üì∑ –ù–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        return

    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    state_data['state'] = STATE_PHOTO_DELETE
    profile.telegram_state = state_data
    profile.save()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    text = (
        f"üóë *–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π*\n\n"
        f"üè† {prop.name}\n"
        f"üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ: {photos.count()}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
    )

    keyboard = []
    for i, photo in enumerate(photos[:6], 1):
        keyboard.append([KeyboardButton(f"üóë –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ #{i}")])

    keyboard.extend([
        [KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ")],
        [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]
    ])

    send_telegram_message(
        chat_id,
        text,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True).to_dict()
    )

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    show_property_photos_enhanced(chat_id, prop, photos)


def handle_photo_delete(chat_id, text):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    profile = _get_profile(chat_id)
    state_data = profile.telegram_state or {}
    property_id = state_data.get("editing_property_id")

    if text == "‚ùå –û—Ç–º–µ–Ω–∞":
        handle_manage_photos_start(chat_id)
        return

    try:
        prop = Property.objects.get(id=property_id)
        photos = PropertyPhoto.objects.filter(property=prop)

        if text == "üóë –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ":
            count = photos.count()
            photos.delete()
            send_telegram_message(
                chat_id,
                f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"
            )

        elif text.startswith("üóë –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ #"):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Ñ–æ—Ç–æ
            import re
            match = re.search(r'#(\d+)', text)
            if match:
                photo_num = int(match.group(1))
                photo_list = list(photos)

                if 1 <= photo_num <= len(photo_list):
                    photo_to_delete = photo_list[photo_num - 1]
                    photo_to_delete.delete()
                    send_telegram_message(
                        chat_id,
                        f"‚úÖ –§–æ—Ç–æ #{photo_num} —É–¥–∞–ª–µ–Ω–æ"
                    )
                else:
                    send_telegram_message(chat_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ñ–æ—Ç–æ")
                    return
            else:
                send_telegram_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä —Ñ–æ—Ç–æ")
                return

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
        handle_manage_photos_start(chat_id)

    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        profile.telegram_state = {}
        profile.save()


@log_handler
def debug_photo_management(chat_id, property_id):
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ñ–æ—Ç–æ"""
    profile = _get_profile(chat_id)

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–≤–∞—Ä—Ç–∏—Ä–µ
        if profile.role == 'admin':
            prop = Property.objects.get(id=property_id, owner=profile.user)
        else:  # super_admin
            prop = Property.objects.get(id=property_id)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        profile.telegram_state = {
            'state': STATE_PHOTO_MANAGEMENT,
            'editing_property_id': property_id
        }
        profile.save()

        send_telegram_message(
            chat_id,
            f"üîß *–û—Ç–ª–∞–¥–∫–∞: –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ñ–æ—Ç–æ*\n\n"
            f"üè† {prop.name}\n"
            f"ID: {property_id}\n\n"
            f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ."
        )

        # –°—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
        handle_manage_photos_start(chat_id)

    except Property.DoesNotExist:
        send_telegram_message(chat_id, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
