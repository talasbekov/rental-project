import csv
import logging
import tempfile
from datetime import date, timedelta
from io import StringIO
from typing import Optional

from django.db.models import Sum, Count, Q, F, Avg, ExpressionWrapper, DurationField
from django.core.files import File

from booking_bot.users.models import UserProfile
from booking_bot.listings.models import Property, City, District, PropertyPhoto
from booking_bot.bookings.models import Booking
from .constants import (
    STATE_MAIN_MENU,
    STATE_ADMIN_ADD_PROPERTY,
    STATE_ADMIN_ADD_DESC,
    STATE_ADMIN_ADD_ADDRESS,
    STATE_ADMIN_ADD_CITY,
    STATE_ADMIN_ADD_DISTRICT,
    STATE_ADMIN_ADD_CLASS,
    STATE_ADMIN_ADD_ROOMS,
    STATE_ADMIN_ADD_AREA,
    STATE_ADMIN_ADD_PRICE,
    STATE_ADMIN_ADD_PHOTOS,
    _get_profile,
    log_handler,
    start_command_handler,
)
from .utils import (
    send_whatsapp_message,
    send_whatsapp_button_message,
    send_whatsapp_list_message,
    send_whatsapp_document,
    download_media,
    get_media_url,
)

logger = logging.getLogger(__name__)


@log_handler
def handle_add_property_start(phone_number: str, text: str) -> Optional[bool]:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã –∞–¥–º–∏–Ω–æ–º"""
    profile = _get_profile(phone_number)
    state_data = profile.whatsapp_state or {}
    state = state_data.get("state")

    admin_states = {
        STATE_ADMIN_ADD_PROPERTY,
        STATE_ADMIN_ADD_DESC,
        STATE_ADMIN_ADD_ADDRESS,
        STATE_ADMIN_ADD_CITY,
        STATE_ADMIN_ADD_DISTRICT,
        STATE_ADMIN_ADD_CLASS,
        STATE_ADMIN_ADD_ROOMS,
        STATE_ADMIN_ADD_AREA,
        STATE_ADMIN_ADD_PRICE,
        STATE_ADMIN_ADD_PHOTOS,
    }

    # –¢—Ä–∏–≥–≥–µ—Ä –Ω–∞ –ø–µ—Ä–≤—ã–π —à–∞–≥
    if text == "–î–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É" and state not in admin_states:
        if profile.role not in ("admin", "super_admin", "super_user"):
            send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
            return True

        jwt = (state_data or {}).get("jwt_access_token")
        new_state = {"state": STATE_ADMIN_ADD_PROPERTY, "new_property": {}}
        if jwt:
            new_state["jwt_access_token"] = jwt
        profile.whatsapp_state = new_state
        profile.save()

        send_whatsapp_message(
            phone_number,
            "‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã*\n\n"
            "–®–∞–≥ 1/10: –í–≤–µ–¥–∏—Ç–µ *–Ω–∞–∑–≤–∞–Ω–∏–µ* –∫–≤–∞—Ä—Ç–∏—Ä—ã:\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: –£—é—Ç–Ω–∞—è —Å—Ç—É–¥–∏—è –≤ —Ü–µ–Ω—Ç—Ä–µ",
        )
        return True

    if state not in admin_states:
        return False

    # –û—Ç–º–µ–Ω–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
    if text in ("–û—Ç–º–µ–Ω–∞", "–û—Ç–º–µ–Ω–∏—Ç—å"):
        profile.whatsapp_state = {}
        profile.save()
        start_command_handler(phone_number)
        return True

    # –®–∞–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã
    if state == STATE_ADMIN_ADD_PROPERTY:
        state_data["new_property"]["name"] = text.strip()
        state_data["state"] = STATE_ADMIN_ADD_DESC
        profile.whatsapp_state = state_data
        profile.save()
        send_whatsapp_message(phone_number, "–®–∞–≥ 2/10: –í–≤–µ–¥–∏—Ç–µ *–æ–ø–∏—Å–∞–Ω–∏–µ* –∫–≤–∞—Ä—Ç–∏—Ä—ã:")
        return True

    if state == STATE_ADMIN_ADD_DESC:
        state_data["new_property"]["description"] = text.strip()
        state_data["state"] = STATE_ADMIN_ADD_ADDRESS
        profile.whatsapp_state = state_data
        profile.save()
        send_whatsapp_message(phone_number, "–®–∞–≥ 3/10: –í–≤–µ–¥–∏—Ç–µ *–∞–¥—Ä–µ—Å* –∫–≤–∞—Ä—Ç–∏—Ä—ã:")
        return True

    if state == STATE_ADMIN_ADD_ADDRESS:
        state_data["new_property"]["address"] = text.strip()
        state_data["state"] = STATE_ADMIN_ADD_CITY
        profile.whatsapp_state = state_data
        profile.save()

        cities = City.objects.all().order_by("name")
        sections = [
            {
                "title": "–ì–æ—Ä–æ–¥–∞",
                "rows": [
                    {"id": f"admin_city_{city.id}", "title": city.name[:24]}
                    for city in cities[:10]
                ],
            }
        ]

        send_whatsapp_list_message(
            phone_number, "–®–∞–≥ 4/10: –í—ã–±–µ—Ä–∏—Ç–µ *–≥–æ—Ä–æ–¥*:", "–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥", sections
        )
        return True

    if state == STATE_ADMIN_ADD_CITY:
        try:
            city = City.objects.get(name=text)
            state_data["new_property"]["city_id"] = city.id
            state_data["state"] = STATE_ADMIN_ADD_DISTRICT
            profile.whatsapp_state = state_data
            profile.save()

            districts = District.objects.filter(city=city).order_by("name")
            sections = [
                {
                    "title": f"–†–∞–π–æ–Ω—ã {city.name}",
                    "rows": [
                        {"id": f"admin_district_{d.id}", "title": d.name[:24]}
                        for d in districts[:10]
                    ],
                }
            ]

            send_whatsapp_list_message(
                phone_number,
                f"–®–∞–≥ 5/10: –í—ã–±–µ—Ä–∏—Ç–µ *—Ä–∞–π–æ–Ω* –≤ {city.name}:",
                "–í—ã–±—Ä–∞—Ç—å —Ä–∞–π–æ–Ω",
                sections,
            )
        except City.DoesNotExist:
            send_whatsapp_message(
                phone_number, "‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
            )
        return True

    if state == STATE_ADMIN_ADD_DISTRICT:
        try:
            district = District.objects.get(
                name=text, city_id=state_data["new_property"]["city_id"]
            )
            state_data["new_property"]["district_id"] = district.id
            state_data["state"] = STATE_ADMIN_ADD_CLASS
            profile.whatsapp_state = state_data
            profile.save()

            buttons = [
                {"id": "admin_class_economy", "title": "–ö–æ–º—Ñ–æ—Ä—Ç"},
                {"id": "admin_class_business", "title": "–ë–∏–∑–Ω–µ—Å"},
                {"id": "admin_class_luxury", "title": "–ü—Ä–µ–º–∏—É–º"},
            ]

            send_whatsapp_button_message(
                phone_number, "–®–∞–≥ 6/10: –í—ã–±–µ—Ä–∏—Ç–µ *–∫–ª–∞—Å—Å* –∂–∏–ª—å—è:", buttons
            )
        except District.DoesNotExist:
            send_whatsapp_message(
                phone_number, "‚ùå –†–∞–π–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
            )
        return True

    if state == STATE_ADMIN_ADD_CLASS:
        mapping = {"–ö–æ–º—Ñ–æ—Ä—Ç": "economy", "–ë–∏–∑–Ω–µ—Å": "business", "–ü—Ä–µ–º–∏—É–º": "luxury"}
        if text in mapping:
            state_data["new_property"]["property_class"] = mapping[text]
            state_data["state"] = STATE_ADMIN_ADD_ROOMS
            profile.whatsapp_state = state_data
            profile.save()

            sections = [
                {
                    "title": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç",
                    "rows": [
                        {"id": "admin_rooms_1", "title": "1"},
                        {"id": "admin_rooms_2", "title": "2"},
                        {"id": "admin_rooms_3", "title": "3"},
                        {"id": "admin_rooms_4", "title": "4+"},
                    ],
                }
            ]

            send_whatsapp_list_message(
                phone_number, "–®–∞–≥ 7/10: –°–∫–æ–ª—å–∫–æ *–∫–æ–º–Ω–∞—Ç*?", "–í—ã–±—Ä–∞—Ç—å", sections
            )
        else:
            send_whatsapp_message(
                phone_number, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
            )
        return True

    if state == STATE_ADMIN_ADD_ROOMS:
        try:
            rooms = 4 if text == "4+" else int(text)
            state_data["new_property"]["number_of_rooms"] = rooms
            state_data["state"] = STATE_ADMIN_ADD_AREA
            profile.whatsapp_state = state_data
            profile.save()
            send_whatsapp_message(phone_number, "–®–∞–≥ 8/10: –í–≤–µ–¥–∏—Ç–µ *–ø–ª–æ—â–∞–¥—å* (–º¬≤):")
        except ValueError:
            send_whatsapp_message(
                phone_number, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç."
            )
        return True

    if state == STATE_ADMIN_ADD_AREA:
        try:
            area = float(text.replace(",", "."))
            state_data["new_property"]["area"] = area
            state_data["state"] = STATE_ADMIN_ADD_PRICE
            profile.whatsapp_state = state_data
            profile.save()
            send_whatsapp_message(
                phone_number, "–®–∞–≥ 9/10: –í–≤–µ–¥–∏—Ç–µ *—Ü–µ–Ω—É* –∑–∞ —Å—É—Ç–∫–∏ (‚Ç∏):"
            )
        except ValueError:
            send_whatsapp_message(
                phone_number, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–ª–æ—â–∞–¥–∏. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ."
            )
        return True

    if state == STATE_ADMIN_ADD_PRICE:
        try:
            price = float(text.replace(",", "."))
            np = state_data["new_property"]
            np["price_per_day"] = price

            prop = Property.objects.create(
                name=np["name"],
                description=np["description"],
                address=np["address"],
                district_id=np["district_id"],
                property_class=np["property_class"],
                number_of_rooms=np["number_of_rooms"],
                area=np["area"],
                price_per_day=np["price_per_day"],
                owner=profile.user,
            )

            state_data["new_property"]["id"] = prop.id
            state_data["state"] = STATE_ADMIN_ADD_PHOTOS
            state_data.pop("photo_mode", None)
            profile.whatsapp_state = state_data
            profile.save()

            buttons = [
                {"id": "photo_url", "title": "üìé URL —Ñ–æ—Ç–æ"},
                {"id": "photo_upload", "title": "üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å"},
                {"id": "skip_photos", "title": "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"},
            ]

            send_whatsapp_button_message(
                phone_number,
                "–®–∞–≥ 10/10: –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:",
                buttons,
            )
        except ValueError:
            send_whatsapp_message(
                phone_number, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ."
            )
        except Exception as e:
            logger.error(f"Error creating property: {e}", exc_info=True)
            send_whatsapp_message(
                phone_number, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
        return True

    if state == STATE_ADMIN_ADD_PHOTOS:
        prop_id = state_data["new_property"].get("id")
        if not prop_id:
            send_whatsapp_message(
                phone_number, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É."
            )
            profile.whatsapp_state = {}
            profile.save()
            return True

        photo_mode = state_data.get("photo_mode")

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏
        if photo_mode is None:
            if text == "URL —Ñ–æ—Ç–æ":
                state_data["photo_mode"] = "url"
                profile.whatsapp_state = state_data
                profile.save()
                send_whatsapp_message(
                    phone_number,
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ *URL* —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–ª–∏ –ø–æ –æ–¥–Ω–æ–º—É):\n\n"
                    "–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–ì–æ—Ç–æ–≤–æ'",
                )
            elif text == "–ó–∞–≥—Ä—É–∑–∏—Ç—å":
                state_data["photo_mode"] = "device"
                profile.whatsapp_state = state_data
                profile.save()
                send_whatsapp_message(
                    phone_number,
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n\n"
                    "–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–ì–æ—Ç–æ–≤–æ'",
                )
            elif text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
                send_whatsapp_message(
                    phone_number, f"‚úÖ –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!"
                )
                profile.whatsapp_state = {}
                profile.save()
                show_admin_menu(phone_number)
            else:
                send_whatsapp_message(
                    phone_number, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π."
                )
            return True

        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
        if text == "–ì–æ—Ç–æ–≤–æ":
            photos_count = PropertyPhoto.objects.filter(property_id=prop_id).count()
            send_whatsapp_message(
                phone_number, f"‚úÖ –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å {photos_count} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏!"
            )
            profile.whatsapp_state = {}
            profile.save()
            show_admin_menu(phone_number)
            return True

        # –†–µ–∂–∏–º URL
        if photo_mode == "url" and text:
            urls = [u.strip() for u in text.split() if u.strip().startswith("http")]
            created = 0
            for url in urls:
                try:
                    PropertyPhoto.objects.create(property_id=prop_id, image_url=url)
                    created += 1
                except Exception as e:
                    logger.warning(f"Bad URL {url}: {e}")

            if created > 0:
                send_whatsapp_message(
                    phone_number,
                    f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {created} —Ñ–æ—Ç–æ.\n"
                    "–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ URL –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '–ì–æ—Ç–æ–≤–æ'",
                )
            else:
                send_whatsapp_message(
                    phone_number, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL."
                )
            return True

        # –†–µ–∂–∏–º device
        if photo_mode == "device":
            send_whatsapp_message(
                phone_number, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."
            )
            return True

    return False


@log_handler
def handle_photo_upload(phone_number, message_data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    profile = _get_profile(phone_number)
    state_data = profile.whatsapp_state or {}
    state = state_data.get("state")

    logger.info(f"handle_photo_upload: state={state}")

    if state != STATE_ADMIN_ADD_PHOTOS:
        return False

    photo_mode = state_data.get("photo_mode")
    if photo_mode != "device":
        return False

    prop_id = state_data["new_property"].get("id")
    if not prop_id:
        send_whatsapp_message(phone_number, "‚ùå –û—à–∏–±–∫–∞: –∫–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return True

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ –∏–∑ WhatsApp
    if message_data.get("type") == "image":
        image = message_data.get("image", {})
        media_id = image.get("id")

        if not media_id:
            send_whatsapp_message(phone_number, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ.")
            return True

        try:
            # –ü–æ–ª—É—á–∞–µ–º URL –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
            media_url = get_media_url(media_id)
            if not media_url:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞")

            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            media_content = download_media(media_url, media_id)
            if not media_content:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            tmp = tempfile.NamedTemporaryFile(delete=False, suffix=".jpg")
            tmp.write(media_content)
            tmp.close()

            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
            with open(tmp.name, "rb") as f:
                django_file = File(f, name=f"property_{prop_id}_{media_id}.jpg")
                PropertyPhoto.objects.create(property_id=prop_id, image=django_file)

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            import os

            os.unlink(tmp.name)

            total_photos = PropertyPhoto.objects.filter(property_id=prop_id).count()
            send_whatsapp_message(
                phone_number,
                f"‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞! –í—Å–µ–≥–æ —Ñ–æ—Ç–æ: {total_photos}\n"
                "–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '–ì–æ—Ç–æ–≤–æ'",
            )

        except Exception as e:
            logger.error(f"Failed to save photo: {e}", exc_info=True)
            send_whatsapp_message(
                phone_number, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )

        return True

    return False


@log_handler
def show_admin_menu(phone_number):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é"""
    profile = _get_profile(phone_number)

    sections = [
        {
            "title": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
            "rows": [
                {"id": "add_property", "title": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É"},
                {"id": "my_properties", "title": "üè† –ú–æ–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã"},
                {"id": "statistics", "title": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"},
            ],
        }
    ]

    if profile.role in ("super_admin", "super_user"):
        sections.append(
            {
                "title": "–°—É–ø–µ—Ä –∞–¥–º–∏–Ω",
                "rows": [
                    {"id": "manage_admins", "title": "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏"},
                    {"id": "all_statistics", "title": "üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"},
                ],
            }
        )

    sections.append(
        {
            "title": "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
            "rows": [{"id": "main_menu", "title": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"}],
        }
    )

    send_whatsapp_list_message(
        phone_number,
        "üîß *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        "–í—ã–±—Ä–∞—Ç—å",
        sections,
        header="–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
    )


@log_handler
def show_admin_panel(phone_number):
    """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    profile = _get_profile(phone_number)
    if profile.role not in ("admin", "super_admin", "super_user"):
        send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    show_admin_menu(phone_number)


@log_handler
def show_admin_properties(phone_number):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä –∞–¥–º–∏–Ω–∞"""
    profile = _get_profile(phone_number)
    if profile.role not in ("admin", "super_admin", "super_user"):
        send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    # –ö–≤–∞—Ä—Ç–∏—Ä—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–ª–∏ –≤—Å–µ (–¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞)
    props = (
        Property.objects.filter(owner=profile.user)
        if profile.role == "admin"
        else Property.objects.all()
    )

    if not props.exists():
        send_whatsapp_message(
            phone_number,
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä.\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ '–ú–µ–Ω—é' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.",
        )
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä
    lines = ["üè† *–í–∞—à–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã:*\n"]
    for prop in props[:10]:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è WhatsApp
        lines.append(
            f"‚Ä¢ {prop.name} ‚Äî {prop.district.city.name}, {prop.district.name}\n"
            f"  {prop.price_per_day} ‚Ç∏/—Å—É—Ç–∫–∏ ‚Äî {prop.status}"
        )

    if props.count() > 10:
        lines.append(f"\n... –∏ –µ—â–µ {props.count() - 10} –∫–≤–∞—Ä—Ç–∏—Ä")

    text = "\n".join(lines)
    send_whatsapp_message(phone_number, text)


@log_handler
def show_detailed_statistics(phone_number, period="month"):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    profile = _get_profile(phone_number)
    if profile.role not in ("admin", "super_admin", "super_user"):
        send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    today = date.today()
    if period == "week":
        start = today - timedelta(days=7)
    elif period == "month":
        start = today - timedelta(days=30)
    elif period == "quarter":
        start = today - timedelta(days=90)
    else:
        start = today - timedelta(days=365)

    if profile.role == "admin":
        props = Property.objects.filter(owner=profile.user)
    else:
        props = Property.objects.all()

    bookings = Booking.objects.filter(
        property__in=props, created_at__gte=start, status__in=["confirmed", "completed"]
    )

    total_revenue = bookings.aggregate(Sum("total_price"))["total_price__sum"] or 0
    total_bookings = bookings.count()
    canceled = Booking.objects.filter(
        property__in=props, created_at__gte=start, status="cancelled"
    ).count()
    avg_value = total_revenue / total_bookings if total_bookings else 0

    text = (
        f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period}:*\n\n"
        f"üí∞ –î–æ—Ö–æ–¥: {total_revenue:,.0f} ‚Ç∏\n"
        f"üì¶ –ë—Ä–æ–Ω–∏: {total_bookings}\n"
        f"‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ: {canceled}\n"
        f"üí≥ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {avg_value:,.0f} ‚Ç∏"
    )

    buttons = [
        {"id": "stat_week", "title": "–ù–µ–¥–µ–ª—è"},
        {"id": "stat_month", "title": "–ú–µ—Å—è—Ü"},
        {"id": "stat_quarter", "title": "–ö–≤–∞—Ä—Ç–∞–ª"},
    ]

    send_whatsapp_button_message(phone_number, text, buttons, footer="–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥")


@log_handler
def show_extended_statistics(phone_number, period="month"):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    profile = _get_profile(phone_number)
    if profile.role not in ("admin", "super_admin", "super_user"):
        send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    today = date.today()
    period_map = {
        "week": (today - timedelta(days=7), "–Ω–µ–¥–µ–ª—é"),
        "month": (today - timedelta(days=30), "–º–µ—Å—è—Ü"),
        "quarter": (today - timedelta(days=90), "–∫–≤–∞—Ä—Ç–∞–ª"),
        "year": (today - timedelta(days=365), "–≥–æ–¥"),
    }
    start, period_label = period_map.get(period, period_map["month"])

    props = (
        Property.objects.filter(owner=profile.user)
        if profile.role == "admin"
        else Property.objects.all()
    )

    if not props.exists():
        send_whatsapp_message(phone_number, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.")
        return

    base_filter = {
        "property__in": props,
        "created_at__gte": start,
    }

    bookings = Booking.objects.filter(
        status__in=["confirmed", "completed"], **base_filter
    )

    total_revenue = bookings.aggregate(total=Sum("total_price"))["total"] or 0
    total_bookings = bookings.count()
    canceled_qs = Booking.objects.filter(status="cancelled", **base_filter)
    canceled_count = canceled_qs.count()
    avg_check = total_revenue / total_bookings if total_bookings else 0

    duration_expr = ExpressionWrapper(
        F("end_date") - F("start_date"), output_field=DurationField()
    )
    lead_expr = ExpressionWrapper(
        F("start_date") - F("created_at"), output_field=DurationField()
    )
    annotated = bookings.annotate(duration_days=duration_expr, lead_days=lead_expr)

    total_nights_delta = annotated.aggregate(total=Sum("duration_days"))["total"]
    avg_stay_delta = annotated.aggregate(avg=Avg("duration_days"))["avg"]
    avg_lead_delta = annotated.aggregate(avg=Avg("lead_days"))["avg"]

    total_nights = total_nights_delta.days if total_nights_delta else 0
    avg_stay = avg_stay_delta.days if avg_stay_delta else 0
    avg_lead = avg_lead_delta.days if avg_lead_delta else 0

    total_days = max((today - start).days, 1)
    inventory = props.count() * total_days
    occupancy_rate = (total_nights / inventory * 100) if inventory else 0

    class_labels = {
        "comfort": "–ö–æ–º—Ñ–æ—Ä—Ç",
        "business": "–ë–∏–∑–Ω–µ—Å",
        "premium": "–ü—Ä–µ–º–∏—É–º",
    }
    class_lines = [
        f"{class_labels.get(row['property__property_class'], row['property__property_class'])}: {row['total']:,.0f} ‚Ç∏"
        for row in bookings.values("property__property_class").annotate(total=Sum("total_price"))
    ]

    top_props_revenue = (
        bookings.values("property__name")
        .annotate(total=Sum("total_price"))
        .order_by("-total")[:5]
    )
    top_props_count = (
        bookings.values("property__name")
        .annotate(count=Count("id"))
        .order_by("-count")[:5]
    )
    top_users_count = (
        bookings.values("user__username")
        .annotate(count=Count("id"))
        .order_by("-count")[:5]
    )
    top_users_spend = (
        bookings.values("user__username")
        .annotate(total=Sum("total_price"))
        .order_by("-total")[:5]
    )
    top_agents_revenue = (
        bookings.values("property__owner__username")
        .annotate(total=Sum("total_price"))
        .order_by("-total")[:5]
    )
    top_agents_count = (
        bookings.values("property__owner__username")
        .annotate(count=Count("id"))
        .order_by("-count")[:5]
    )

    reason_labels = dict(Booking.CANCEL_REASON_CHOICES)
    cancel_lines = [
        f"{reason_labels.get(row['cancel_reason'], row['cancel_reason'] or '–±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã')}: {row['total']}"
        for row in canceled_qs.values("cancel_reason").annotate(total=Count("id"))
        if row["total"]
    ]

    summary_text = (
        f"üìà *–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ {period_label}:*\n\n"
        f"üí∞ –î–æ—Ö–æ–¥: {total_revenue:,.0f} ‚Ç∏\n"
        f"üì¶ –ë—Ä–æ–Ω–∏: {total_bookings}, –æ—Ç–º–µ–Ω—ã: {canceled_count}\n"
        f"üí≥ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {avg_check:,.0f} ‚Ç∏\n"
        f"üè® –ó–∞–Ω—è—Ç–æ—Å—Ç—å: {occupancy_rate:.1f}%\n"
        f"üõèÔ∏è –°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {avg_stay} –Ω–æ—á.\n"
        f"‚è≥ –°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫ –¥–æ –∑–∞–µ–∑–¥–∞: {avg_lead} –¥–Ω."
    )
    send_whatsapp_message(phone_number, summary_text)

    if class_lines:
        class_text = "üè∑Ô∏è *–î–æ—Ö–æ–¥ –ø–æ –∫–ª–∞—Å—Å–∞–º:*\n" + "\n".join(class_lines)
        send_whatsapp_message(phone_number, class_text)

    props_income_lines = [
        f"{idx}. {row['property__name']}: {row['total']:,.0f} ‚Ç∏"
        for idx, row in enumerate(top_props_revenue, start=1)
    ] or ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"]
    props_count_lines = [
        f"{idx}. {row['property__name']}: {row['count']}"
        for idx, row in enumerate(top_props_count, start=1)
    ] or ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"]
    props_text = (
        "üè† *–¢–æ–ø-5 –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ –¥–æ—Ö–æ–¥—É:*\n"
        + "\n".join(props_income_lines)
        + "\n\nüìä *–¢–æ–ø-5 –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±—Ä–æ–Ω–µ–π:*\n"
        + "\n".join(props_count_lines)
    )
    send_whatsapp_message(phone_number, props_text)

    users_count_lines = [
        f"{idx}. {row['user__username']}: {row['count']}"
        for idx, row in enumerate(top_users_count, start=1)
    ] or ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"]
    users_spend_lines = [
        f"{idx}. {row['user__username']}: {row['total']:,.0f} ‚Ç∏"
        for idx, row in enumerate(top_users_spend, start=1)
    ] or ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"]
    users_text = (
        "üë• *–¢–æ–ø-5 –≥–æ—Å—Ç–µ–π –ø–æ –∑–∞—Å–µ–ª–µ–Ω–∏—è–º:*\n"
        + "\n".join(users_count_lines)
        + "\n\nüí∏ *–¢–æ–ø-5 –≥–æ—Å—Ç–µ–π –ø–æ —Ç—Ä–∞—Ç–∞–º:*\n"
        + "\n".join(users_spend_lines)
    )
    send_whatsapp_message(phone_number, users_text)

    agents_revenue_lines = [
        f"{idx}. {row['property__owner__username']}: {row['total']:,.0f} ‚Ç∏"
        for idx, row in enumerate(top_agents_revenue, start=1)
    ] or ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"]
    agents_count_lines = [
        f"{idx}. {row['property__owner__username']}: {row['count']}"
        for idx, row in enumerate(top_agents_count, start=1)
    ] or ["–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"]
    agents_text = (
        "üè¢ *–¢–æ–ø-5 —Ä–∏–µ–ª—Ç–æ—Ä–æ–≤ –ø–æ –¥–æ—Ö–æ–¥—É:*\n"
        + "\n".join(agents_revenue_lines)
        + "\n\nüìà *–¢–æ–ø-5 —Ä–∏–µ–ª—Ç–æ—Ä–æ–≤ –ø–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º:*\n"
        + "\n".join(agents_count_lines)
    )
    send_whatsapp_message(phone_number, agents_text)

    if cancel_lines:
        cancel_text = "üö´ *–û—Ç–º–µ–Ω—ã –ø–æ –ø—Ä–∏—á–∏–Ω–∞–º:*\n" + "\n".join(cancel_lines)
        send_whatsapp_message(phone_number, cancel_text)

    # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
    buttons = [
        {"id": "stat_week", "title": "–ù–µ–¥–µ–ª—è"},
        {"id": "stat_month", "title": "–ú–µ—Å—è—Ü"},
        {"id": "stat_csv", "title": "üì• CSV"},
    ]

    send_whatsapp_button_message(
        phone_number, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –∏–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ –æ—Ç—á–µ—Ç:", buttons
    )


@log_handler
def export_statistics_csv(phone_number, period="month"):
    """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å CSV —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    profile = _get_profile(phone_number)
    if profile.role not in ("admin", "super_admin", "super_user"):
        send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    today = date.today()
    if period == "week":
        start = today - timedelta(days=7)
    elif period == "month":
        start = today - timedelta(days=30)
    elif period == "quarter":
        start = today - timedelta(days=90)
    else:
        start = today - timedelta(days=365)

    # –ü–æ–ª—É—á–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    if profile.role == "admin":
        props = Property.objects.filter(owner=profile.user)
    else:
        props = Property.objects.all()

    bookings = Booking.objects.filter(
        property__in=props, created_at__gte=start
    ).select_related("property", "user")

    # –°–æ–∑–¥–∞–µ–º CSV
    buffer = StringIO()
    writer = csv.writer(buffer)
    writer.writerow(
        [
            "ID",
            "–ö–≤–∞—Ä—Ç–∏—Ä–∞",
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            "–ó–∞–µ–∑–¥",
            "–í—ã–µ–∑–¥",
            "–¶–µ–Ω–∞",
            "–°—Ç–∞—Ç—É—Å",
            "–°–æ–∑–¥–∞–Ω–æ",
        ]
    )

    for b in bookings:
        writer.writerow(
            [
                b.id,
                b.property.name,
                b.user.get_full_name() or b.user.username,
                b.start_date.strftime("%d.%m.%Y"),
                b.end_date.strftime("%d.%m.%Y"),
                b.total_price,
                b.get_status_display(),
                b.created_at.strftime("%d.%m.%Y %H:%M"),
            ]
        )

    buffer.seek(0)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    tmp = tempfile.NamedTemporaryFile(
        delete=False, suffix=".csv", mode="w", encoding="utf-8"
    )
    tmp.write(buffer.getvalue())
    tmp.close()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å —Ñ–∞–π–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ API
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    send_whatsapp_message(
        phone_number,
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!\n\n"
        f"–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç {bookings.count()} –∑–∞–ø–∏—Å–µ–π.\n"
        f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, WhatsApp –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É CSV —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.\n\n"
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ API.",
    )

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    import os

    os.unlink(tmp.name)


@log_handler
def show_property_management(phone_number, property_id):
    """–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–æ–π"""
    profile = _get_profile(phone_number)
    try:
        if profile.role == "admin":
            prop = Property.objects.get(id=property_id, owner=profile.user)
        else:
            prop = Property.objects.get(id=property_id)
    except Property.DoesNotExist:
        send_whatsapp_message(phone_number, "‚ùå –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    month = date.today() - timedelta(days=30)
    rev = (
        Booking.objects.filter(
            property=prop, created_at__gte=month, status__in=["confirmed", "completed"]
        ).aggregate(Sum("total_price"))["total_price__sum"]
        or 0
    )

    text = (
        f"üè† *{prop.name}*\n"
        f"üõè {prop.number_of_rooms} –∫–æ–º–Ω., {prop.area} –º¬≤\n"
        f"üí∞ {prop.price_per_day} ‚Ç∏/—Å—É—Ç–∫–∏\n"
        f"üìä –î–æ—Ö–æ–¥ (30–¥–Ω): {rev:,.0f} ‚Ç∏\n\n"
        f"–°—Ç–∞—Ç—É—Å: {prop.status}"
    )

    buttons = [
        {"id": f"edit_price_{prop.id}", "title": "üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É"},
        {"id": f"edit_desc_{prop.id}", "title": "üìù –û–ø–∏—Å–∞–Ω–∏–µ"},
        {"id": f"toggle_status_{prop.id}", "title": "üîÑ –°—Ç–∞—Ç—É—Å"},
    ]

    send_whatsapp_button_message(
        phone_number, text, buttons, header="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä–æ–π"
    )


@log_handler
def show_super_admin_menu(phone_number):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞"""
    profile = _get_profile(phone_number)
    if profile.role not in ("super_admin", "super_user"):
        send_whatsapp_message(phone_number, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    admins = UserProfile.objects.filter(role="admin").count()
    props = Property.objects.count()
    users = UserProfile.objects.filter(role="user").count()

    text = (
        f"üë• *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:*\n\n"
        f"üë®‚Äçüíº –ê–¥–º–∏–Ω–æ–≤: {admins}\n"
        f"üè† –ö–≤–∞—Ä—Ç–∏—Ä: {props}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users}"
    )

    sections = [
        {
            "title": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
            "rows": [
                {"id": "list_admins", "title": "üìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤"},
                {"id": "add_admin", "title": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞"},
                {"id": "city_stats", "title": "üèôÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º"},
            ],
        },
        {
            "title": "–û—Ç—á–µ—Ç—ã",
            "rows": [
                {"id": "general_stats", "title": "üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"},
                {"id": "revenue_report", "title": "üí∞ –û—Ç—á–µ—Ç –æ –¥–æ—Ö–æ–¥–∞—Ö"},
                {"id": "export_all", "title": "üì• –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"},
            ],
        },
    ]

    send_whatsapp_list_message(
        phone_number, text, "–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ", sections, header="–°—É–ø–µ—Ä –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"
    )
