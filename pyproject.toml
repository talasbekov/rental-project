[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "booking_bot"
version = "1.0.0"
description = "ЖильеGO Telegram bot for apartment rentals"
requires-python = ">=3.12"
dependencies = [
    "Django>=5.0,<5.2",
    "djangorestframework>=3.14,<3.15",
    "djangorestframework-simplejwt>=5.3,<5.5",
    "drf-spectacular>=0.27,<1.0",
    "drf-spectacular-sidecar>=2024.6,<2025.0",
    "django-filter>=24.2,<25.0",
    "django-timezone-field>=6.1,<7.0",
    "django-prometheus>=2.3,<3.0",
    "django-redis>=5.3,<6.0",
    "django-cryptography>=1.1,<1.2",
    "django-celery-beat>=2.6,<3.0",
    "celery>=5.3,<5.4",
    "redis>=5.0,<6.0",
    "structlog>=24.1,<25.0",
    "aiohttp>=3.9,<4.0",
    "aiohttp-retry>=2.8,<3.0",
    "httpx>=0.24,<1.0",
    "httpcore>=1.0,<1.1",
    "pydantic>=2.7,<3.0",
    "pydantic-core>=2.18,<3.0",
    "python-dateutil>=2.8,<3.0",
    "python-crontab>=3.0,<3.1",
    "propcache>=0.3,<0.4",
    "inflection>=0.5,<0.6",
    "boto3>=1.28,<2.0",
    "botocore>=1.31,<2.0",
    "psycopg2-binary>=2.9,<3.0",
    "pillow>=10.3,<11.0",
    "openpyxl>=3.1,<4.0",
    "reportlab>=4.0,<5.0",
    "python-telegram-bot>=20.7,<21.0",
    "heyoo>=0.1,<0.2",
    "whatsapp-python>=4.2,<5.0",
    "twilio>=9.1,<10.0",
    "python-dotenv>=1.0,<2.0",
    "requests>=2.31,<3.0",
    "requests-toolbelt>=1.0,<2.0",
    "asgiref>=3.7,<4.0",
    "uvicorn[standard]>=0.23,<0.25",
    "gunicorn>=21.2,<22.0",
    "starlette>=0.37,<0.40",
    "aiohappyeyeballs>=2.4,<3.0",
    "aiosignal>=1.3,<2.0",
    "attrs>=23.2,<25.0",
    "charset-normalizer>=3.2,<4.0",
    "idna>=3.4,<4.0",
    "sqlparse>=0.5,<1.0",
    "typing_extensions>=4.9,<5.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.7,<1.8",
    "django-stubs>=4.2,<5.0",
    "types-requests>=2.31,<2.32",
    "types-redis>=4.6,<4.7",
    "types-pillow>=10.2,<10.3",
    "black>=23.12,<24.0",
    "isort>=5.12,<6.0",
    "flake8>=6.1,<7.0",
    "flake8-django>=1.4,<2.0",
    "pre-commit>=3.6,<4.0",
    "pytest>=7.4,<8.0",
    "pytest-django>=4.7,<5.0",
    "pytest-cov>=4.1,<5.0",
    "django-upgrade>=1.15,<2.0",
]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    migrations
    | \.venv
    | __pycache__
    | \.git
    | \.tox
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_django = "django"
known_first_party = "booking_bot"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["migrations/*", ".venv/*"]

[tool.mypy]
python_version = "3.12"
plugins = ["mypy_django_plugin.main"]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "migrations/",
    "venv/",
    ".venv/",
    "__pycache__/",
    "staticfiles/"
]

[tool.django-stubs]
django_settings_module = "booking_bot.settings"

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    "migrations",
    ".venv",
    "__pycache__",
    ".git",
    ".tox",
    "build",
    "dist"
]
per-file-ignores = [
    "__init__.py:F401"
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "booking_bot.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["booking_bot"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = "booking_bot"
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/tests/*",
    "manage.py",
    "*/settings/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
